name: Build and Deploy FitOSC (Windows) - Runtime and No Runtime

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on version tag pushes
  workflow_dispatch: # Enables manual triggering

jobs:
  build:
    runs-on: windows-latest # Use Windows runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x' # Adjust based on the .NET version you are using

      # Build without runtime (Framework-dependent)
      - name: Build FitOSC without runtime
        working-directory: ./FitOSC
        run: dotnet publish --configuration Release --output ./output/no-runtime --no-self-contained

      # Build with runtime (Self-contained)
      - name: Build FitOSC with runtime
        working-directory: ./FitOSC
        run: dotnet publish --configuration Release --output ./output/with-runtime --self-contained --runtime win-x64

      - name: Upload release artifact (without runtime)
        uses: actions/upload-artifact@v3
        with:
          name: fitosc-no-runtime # Name the artifact for no-runtime version
          path: ./FitOSC/output/no-runtime # Path to no-runtime build

      - name: Upload release artifact (with runtime)
        uses: actions/upload-artifact@v3
        with:
          name: fitosc-with-runtime # Name the artifact for the runtime version
          path: ./FitOSC/output/with-runtime # Path to runtime build

  deploy:
    needs: build
    runs-on: windows-latest # Ensure deploy job also runs on Windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Tag
        id: extract_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV  # Extract tag and set as env var

      - name: Download artifact (without runtime)
        uses: actions/download-artifact@v3
        with:
          name: fitosc-no-runtime

      - name: Download artifact (with runtime)
        uses: actions/download-artifact@v3
        with:
          name: fitosc-with-runtime

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub Token or PAT
          tag: ${{ env.TAG }}  # Use the extracted tag
          name: Release ${{ env.TAG }}  # Use the extracted tag for release name
          body: |
            Release notes for FitOSC version ${{ env.TAG }}
            
            - **Without runtime**: Framework-dependent deployment.
            - **With runtime**: Self-contained deployment.
          draft: false
          prerelease: false
          assets: |
            ./FitOSC/output/no-runtime/*  # Files for framework-dependent build
            ./FitOSC/output/with-runtime/*  # Files for self-contained build
